plugins {
    id 'com.android.application'
}

android {
    compileSdkVersion 31
    buildToolsVersion '32.0.0'

    defaultConfig {
        applicationId "org.orbtv.orbservice"
        minSdkVersion 30
        targetSdkVersion 31
        versionCode 1
        versionName "1.0"
        externalNativeBuild {
            cmake {
                arguments "-DANDROID_STL=c++_shared", "-DORB_HBBTV_VERSION=" + ORB_HBBTV_VERSION
            }
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    
    externalNativeBuild {
        cmake {
            path "CMakeLists.txt"
        }
    }
}

task compileAidlNdk() {
    doLast {
        def aidl = [android.sdkDirectory, 'build-tools', android.buildToolsVersion,
                    'aidl'].join(File.separator)

        def outDir = [projectDir.absolutePath, 'src', 'main', 'cpp', 'generated/aidl'].join(File.separator)

        def headerOutDir = [projectDir.absolutePath, 'src', 'main', 'cpp', 'generated'].join(File.separator)

        def searchPathForImports = [projectDir.absolutePath, 'src', 'main', 'cpp', 'aidl'].join(File.separator)

        def aidlFile1 = [projectDir.absolutePath, 'src', 'main', 'cpp', 'aidl',
                         'org', 'orbtv', 'orbservice', "IOrbcSession.aidl"].join(File.separator)

        def aidlFile2 = [projectDir.absolutePath, 'src', 'main', 'cpp', 'aidl',
                         'org', 'orbtv', 'orbservice', "IDvbiSession.aidl"].join(File.separator)

        exec {
            executable(aidl)
            args('--lang=ndk', '-o', outDir, '-h', headerOutDir, '-I', searchPathForImports, aidlFile1, aidlFile2)
        }
    }
}

afterEvaluate {
    preBuild.dependsOn(compileAidlNdk)
}

clean.doLast {
    def aidlOutDir = [projectDir.absolutePath, 'src', 'main', 'cpp', 'generated'].join(File.separator)

    file(aidlOutDir).deleteDir()
}

dependencies {
}
